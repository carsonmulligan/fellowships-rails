<!-- Filter Bar -->
<div class="filter-bar">
  <div class="filter-groups">
    <% Scholarship.tag_counts.each do |tag, count| %>
      <button class="filter-btn" data-tag="<%= tag %>">
        <%= get_emoji(tag) %> <%= tag.titleize %> (<%= count %>)
      </button>
    <% end %>
    <button class="close-filters-btn">Close filters</button>
  </div>
</div>

<!-- Scholarship Grid -->
<div class="scholarship-grid">
  <% @scholarships.each do |scholarship| %>
    <div class="scholarship-card" data-tags="<%= scholarship.tags.join(' ') %>">
      <div class="card-header">
        <h3><%= scholarship.name %></h3>
        <div class="due-date">Due: <%= scholarship.due_date %></div>
      </div>
      
      <div class="card-body">
        <p><%= truncate(scholarship.description, length: 150) %></p>
      </div>

      <div class="card-footer">
        <div class="tags">
          <% scholarship.tags.each do |tag| %>
            <span class="tag"><%= get_emoji(tag) %> <%= tag.titleize %></span>
          <% end %>
        </div>
        <div class="action-buttons">
          <button class="bookmark-btn" data-scholarship-id="<%= scholarship.id %>">
            ⭐️ Bookmark
          </button>
          <a href="<%= scholarship.url %>" target="_blank" class="apply-btn">Learn More</a>
        </div>
      </div>
    </div>
  <% end %>
</div>

<%= render 'shared/premium_features_modal' %>

<script src="https://js.stripe.com/v3/"></script>

<%= javascript_tag do %>
  document.addEventListener('DOMContentLoaded', function() {
    const stripe = Stripe('<%= Rails.application.credentials.stripe[:publishable_key] %>');
    const modal = document.getElementById('premium-features-modal');
    const filterButtons = document.querySelectorAll('.filter-btn');
    const scholarshipCards = document.querySelectorAll('.scholarship-card');
    const closeFiltersBtn = document.querySelector('.close-filters-btn');
    let activeFilters = new Set();

    // Handle bookmark clicks for non-authenticated users
    document.querySelectorAll('.bookmark-btn').forEach(button => {
      button.addEventListener('click', function(e) {
        e.stopPropagation();
        if (!<%= !!session[:user_id] %>) {
          modal.style.display = 'block';
        } else {
          toggleBookmark(this);
        }
      });
    });

    // Close modal when clicking outside
    window.addEventListener('click', function(e) {
      if (e.target === modal) {
        modal.style.display = 'none';
      }
    });

    // Handle Google Sign In
    document.getElementById('google-sign-in').addEventListener('click', function() {
      window.location.href = '/auth/google_oauth2';
    });

    // Handle Subscribe button
    document.getElementById('subscribe-btn').addEventListener('click', async function() {
      const response = await fetch('/create-checkout-session', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content,
        }
      });
      
      const session = await response.json();
      
      const result = await stripe.redirectToCheckout({
        sessionId: session.id
      });

      if (result.error) {
        alert(result.error.message);
      }
    });

    // Filter functionality
    filterButtons.forEach(button => {
      button.addEventListener('click', function() {
        const tag = this.dataset.tag;
        if (activeFilters.has(tag)) {
          activeFilters.delete(tag);
          this.classList.remove('active');
        } else {
          activeFilters.add(tag);
          this.classList.add('active');
        }
        filterScholarships();
      });
    });

    closeFiltersBtn.addEventListener('click', function() {
      activeFilters.clear();
      filterButtons.forEach(btn => btn.classList.remove('active'));
      filterScholarships();
    });

    function filterScholarships() {
      scholarshipCards.forEach(card => {
        const cardTags = card.dataset.tags.split(' ');
        const matchesFilters = activeFilters.size === 0 || 
          Array.from(activeFilters).every(tag => cardTags.includes(tag));
        card.style.display = matchesFilters ? 'block' : 'none';
      });
    }

    // Bookmark functionality for authenticated users
    function toggleBookmark(button) {
      const scholarshipId = button.dataset.scholarshipId;
      const isBookmarked = button.classList.contains('active');
      
      const method = isBookmarked ? 'DELETE' : 'POST';
      const url = isBookmarked ? `/bookmarks/${scholarshipId}` : '/bookmarks';
      
      fetch(url, {
        method: method,
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content,
        },
        body: !isBookmarked ? JSON.stringify({ scholarship_id: scholarshipId }) : null
      })
      .then(response => response.json())
      .then(data => {
        if (data.status === 'success') {
          button.classList.toggle('active');
          button.textContent = isBookmarked ? '⭐️ Bookmark' : '⭐️ Bookmarked';
        }
      });
    }
  });
<% end %> 